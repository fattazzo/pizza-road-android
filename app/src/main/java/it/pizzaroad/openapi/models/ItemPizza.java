/*
 * Project: Pizza Road
 * File: ItemPizza
 *
 * Created by fattazzo
 * Copyright Â© 2020 Gianluca Fattarsi. All rights reserved.
 *
 * MIT License
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * PizzaShop
 * <h1>REST API for managing a pizzeria.</h1> <br>  The application includes the management of:  <ul>     <li>users (workers and customers)</li>     <li>company branches</li>     <li>products (variations like doughs, dimensions and toppings, categories)</li>     <li>orders (creation, management)</li> <ul>
 *
 * OpenAPI spec version: 1.0.0
 * Contact: gianluca.fattarsi@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.pizzaroad.openapi.models;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ItemPizza
 */


public class ItemPizza extends Item {
  @SerializedName("prices")
  private List<ItemPizzaPrice> prices = null;

  @SerializedName("doughs")
  private List<VariationDough> doughs = null;

  @SerializedName("sizes")
  private List<VariationSize> sizes = null;

  @SerializedName("toppingExtras")
  private List<ToppingExtra> toppingExtras = null;

  public ItemPizza prices(List<ItemPizzaPrice> prices) {
    this.prices = prices;
    return this;
  }

  public ItemPizza addPricesItem(ItemPizzaPrice pricesItem) {
    if (this.prices == null) {
      this.prices = new ArrayList<ItemPizzaPrice>();
    }
    this.prices.add(pricesItem);
    return this;
  }

   /**
   * Get prices
   * @return prices
  **/
  @Schema(description = "")
  public List<ItemPizzaPrice> getPrices() {
    return prices;
  }

  public void setPrices(List<ItemPizzaPrice> prices) {
    this.prices = prices;
  }

   /**
   * Get doughs
   * @return doughs
  **/
  @Schema(description = "")
  public List<VariationDough> getDoughs() {
    return doughs;
  }

   /**
   * Get sizes
   * @return sizes
  **/
  @Schema(description = "")
  public List<VariationSize> getSizes() {
    return sizes;
  }

   /**
   * Get toppingExtras
   * @return toppingExtras
  **/
  @Schema(description = "")
  public List<ToppingExtra> getToppingExtras() {
    return toppingExtras;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemPizza itemPizza = (ItemPizza) o;
    return Objects.equals(this.prices, itemPizza.prices) &&
        Objects.equals(this.doughs, itemPizza.doughs) &&
        Objects.equals(this.sizes, itemPizza.sizes) &&
        Objects.equals(this.toppingExtras, itemPizza.toppingExtras) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(prices, doughs, sizes, toppingExtras, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemPizza {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    prices: ").append(toIndentedString(prices)).append("\n");
    sb.append("    doughs: ").append(toIndentedString(doughs)).append("\n");
    sb.append("    sizes: ").append(toIndentedString(sizes)).append("\n");
    sb.append("    toppingExtras: ").append(toIndentedString(toppingExtras)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

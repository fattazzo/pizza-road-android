/*
 * Project: Pizza Road
 * File: OrderLine
 *
 * Created by fattazzo
 * Copyright Â© 2020 Gianluca Fattarsi. All rights reserved.
 *
 * MIT License
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * PizzaShop
 * <h1>REST API for managing a pizzeria.</h1> <br>  The application includes the management of:  <ul>     <li>users (workers and customers)</li>     <li>company branches</li>     <li>products (variations like doughs, dimensions and toppings, categories)</li>     <li>orders (creation, management)</li> <ul>
 *
 * OpenAPI spec version: 1.0.0
 * Contact: gianluca.fattarsi@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.pizzaroad.openapi.models;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * OrderLine
 */


public class OrderLine {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("item")
  private Item item = null;

  @SerializedName("productPrice")
  private ItemProductPrice productPrice = null;

  @SerializedName("pizzaPrice")
  private ItemPizzaPrice pizzaPrice = null;

  @SerializedName("pizzaDough")
  private VariationDough pizzaDough = null;

  @SerializedName("pizzaToppingExtras")
  private List<ToppingExtra> pizzaToppingExtras = null;

  @SerializedName("quantity")
  private Integer quantity = null;

  @SerializedName("customerNote")
  private String customerNote = null;

  @SerializedName("total")
  private BigDecimal total = null;

  public OrderLine id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public OrderLine item(Item item) {
    this.item = item;
    return this;
  }

   /**
   * Get item
   * @return item
  **/
  @Schema(required = true, description = "")
  public Item getItem() {
    return item;
  }

  public void setItem(Item item) {
    this.item = item;
  }

  public OrderLine productPrice(ItemProductPrice productPrice) {
    this.productPrice = productPrice;
    return this;
  }

   /**
   * Get productPrice
   * @return productPrice
  **/
  @Schema(description = "")
  public ItemProductPrice getProductPrice() {
    return productPrice;
  }

  public void setProductPrice(ItemProductPrice productPrice) {
    this.productPrice = productPrice;
  }

  public OrderLine pizzaPrice(ItemPizzaPrice pizzaPrice) {
    this.pizzaPrice = pizzaPrice;
    return this;
  }

   /**
   * Get pizzaPrice
   * @return pizzaPrice
  **/
  @Schema(description = "")
  public ItemPizzaPrice getPizzaPrice() {
    return pizzaPrice;
  }

  public void setPizzaPrice(ItemPizzaPrice pizzaPrice) {
    this.pizzaPrice = pizzaPrice;
  }

  public OrderLine pizzaDough(VariationDough pizzaDough) {
    this.pizzaDough = pizzaDough;
    return this;
  }

   /**
   * Get pizzaDough
   * @return pizzaDough
  **/
  @Schema(description = "")
  public VariationDough getPizzaDough() {
    return pizzaDough;
  }

  public void setPizzaDough(VariationDough pizzaDough) {
    this.pizzaDough = pizzaDough;
  }

  public OrderLine pizzaToppingExtras(List<ToppingExtra> pizzaToppingExtras) {
    this.pizzaToppingExtras = pizzaToppingExtras;
    return this;
  }

  public OrderLine addPizzaToppingExtrasItem(ToppingExtra pizzaToppingExtrasItem) {
    if (this.pizzaToppingExtras == null) {
      this.pizzaToppingExtras = new ArrayList<ToppingExtra>();
    }
    this.pizzaToppingExtras.add(pizzaToppingExtrasItem);
    return this;
  }

   /**
   * Get pizzaToppingExtras
   * @return pizzaToppingExtras
  **/
  @Schema(description = "")
  public List<ToppingExtra> getPizzaToppingExtras() {
    return pizzaToppingExtras;
  }

  public void setPizzaToppingExtras(List<ToppingExtra> pizzaToppingExtras) {
    this.pizzaToppingExtras = pizzaToppingExtras;
  }

  public OrderLine quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @Schema(required = true, description = "")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public OrderLine customerNote(String customerNote) {
    this.customerNote = customerNote;
    return this;
  }

   /**
   * Get customerNote
   * @return customerNote
  **/
  @Schema(description = "")
  public String getCustomerNote() {
    return customerNote;
  }

  public void setCustomerNote(String customerNote) {
    this.customerNote = customerNote;
  }

  public OrderLine total(BigDecimal total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @Schema(required = true, description = "")
  public BigDecimal getTotal() {
    return total;
  }

  public void setTotal(BigDecimal total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderLine orderLine = (OrderLine) o;
    return Objects.equals(this.id, orderLine.id) &&
        Objects.equals(this.item, orderLine.item) &&
        Objects.equals(this.productPrice, orderLine.productPrice) &&
        Objects.equals(this.pizzaPrice, orderLine.pizzaPrice) &&
        Objects.equals(this.pizzaDough, orderLine.pizzaDough) &&
        Objects.equals(this.pizzaToppingExtras, orderLine.pizzaToppingExtras) &&
        Objects.equals(this.quantity, orderLine.quantity) &&
        Objects.equals(this.customerNote, orderLine.customerNote) &&
        Objects.equals(this.total, orderLine.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, item, productPrice, pizzaPrice, pizzaDough, pizzaToppingExtras, quantity, customerNote, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderLine {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    productPrice: ").append(toIndentedString(productPrice)).append("\n");
    sb.append("    pizzaPrice: ").append(toIndentedString(pizzaPrice)).append("\n");
    sb.append("    pizzaDough: ").append(toIndentedString(pizzaDough)).append("\n");
    sb.append("    pizzaToppingExtras: ").append(toIndentedString(pizzaToppingExtras)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    customerNote: ").append(toIndentedString(customerNote)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

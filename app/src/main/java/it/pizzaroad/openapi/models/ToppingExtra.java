/*
 * Project: Pizza Road
 * File: ToppingExtra
 *
 * Created by fattazzo
 * Copyright Â© 2020 Gianluca Fattarsi. All rights reserved.
 *
 * MIT License
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * PizzaShop
 * <h1>REST API for managing a pizzeria.</h1> <br>  The application includes the management of:  <ul>     <li>users (workers and customers)</li>     <li>company branches</li>     <li>products (variations like doughs, dimensions and toppings, categories)</li>     <li>orders (creation, management)</li> <ul>
 *
 * OpenAPI spec version: 1.0.0
 * Contact: gianluca.fattarsi@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.pizzaroad.openapi.models;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Price of the topping based on a dough and size
 */
@Schema(description = "Price of the topping based on a dough and size")

public class ToppingExtra {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("topping")
  private Topping topping = null;

  @SerializedName("dough")
  private VariationDough dough = null;

  @SerializedName("extra")
  private BigDecimal extra = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("variationSize")
  private VariationSize variationSize = null;

  public ToppingExtra id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ToppingExtra topping(Topping topping) {
    this.topping = topping;
    return this;
  }

   /**
   * Get topping
   * @return topping
  **/
  @Schema(required = true, description = "")
  public Topping getTopping() {
    return topping;
  }

  public void setTopping(Topping topping) {
    this.topping = topping;
  }

  public ToppingExtra dough(VariationDough dough) {
    this.dough = dough;
    return this;
  }

   /**
   * Get dough
   * @return dough
  **/
  @Schema(required = true, description = "")
  public VariationDough getDough() {
    return dough;
  }

  public void setDough(VariationDough dough) {
    this.dough = dough;
  }

  public ToppingExtra extra(BigDecimal extra) {
    this.extra = extra;
    return this;
  }

   /**
   * Get extra
   * @return extra
  **/
  @Schema(required = true, description = "")
  public BigDecimal getExtra() {
    return extra;
  }

  public void setExtra(BigDecimal extra) {
    this.extra = extra;
  }

  public ToppingExtra enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(required = true, description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public ToppingExtra variationSize(VariationSize variationSize) {
    this.variationSize = variationSize;
    return this;
  }

   /**
   * Get variationSize
   * @return variationSize
  **/
  @Schema(required = true, description = "")
  public VariationSize getVariationSize() {
    return variationSize;
  }

  public void setVariationSize(VariationSize variationSize) {
    this.variationSize = variationSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ToppingExtra toppingExtra = (ToppingExtra) o;
    return Objects.equals(this.id, toppingExtra.id) &&
        Objects.equals(this.topping, toppingExtra.topping) &&
        Objects.equals(this.dough, toppingExtra.dough) &&
        Objects.equals(this.extra, toppingExtra.extra) &&
        Objects.equals(this.enabled, toppingExtra.enabled) &&
        Objects.equals(this.variationSize, toppingExtra.variationSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, topping, dough, extra, enabled, variationSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ToppingExtra {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    topping: ").append(toIndentedString(topping)).append("\n");
    sb.append("    dough: ").append(toIndentedString(dough)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    variationSize: ").append(toIndentedString(variationSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

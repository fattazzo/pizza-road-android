/*
 * Project: Pizza Road
 * File: build
 *
 * Created by fattazzo
 * Copyright Â© 2020 Gianluca Fattarsi. All rights reserved.
 *
 * MIT License
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"

    defaultConfig {
        applicationId "it.pizzaroad"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 2
        versionName "0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.buildConfigField "String", "WOO_CONSUMER_KEY", "\"" + getWooConsumerKey() + "\""
            variant.buildConfigField "String", "WOO_CONSUMER_SECRET", "\"" + getWooConsumerSecret() + "\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

def getWooConsumerKey() {
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('woocommerce.properties')))
    return props['CONSUMER_KEY']
}

def getWooConsumerSecret() {
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('woocommerce.properties')))
    return props['CONSUMER_SECRET']
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // AndroidX -------------------------------------------------------
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha03'
    implementation "androidx.annotation:annotation:1.1.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'

    implementation 'com.google.android.material:material:1.1.0'

    // Databinding kotlin
    implementation 'androidx.preference:preference:1.1.1'
    kapt 'com.android.databinding:compiler:3.2.0-alpha10'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.okhttp3:okhttp:4.6.0'

    // Swagger
    implementation "io.swagger.core.v3:swagger-annotations:2.0.0"

    // Dagger
    implementation 'com.google.dagger:dagger:2.27'
    implementation 'com.google.dagger:dagger-android-support:2.27'
    kapt 'com.google.dagger:dagger-compiler:2.27'
    kapt 'com.google.dagger:dagger-android-processor:2.27'

    // Lottie
    // https://github.com/airbnb/lottie-android
    implementation 'com.airbnb.android:lottie:3.4.0'

    // COIL - Coroutine Image Loader
    // https://github.com/coil-kt/coil/
    implementation('io.coil-kt:coil:0.10.1')

    // Test -----------------------------------------------------------
    testImplementation 'junit:junit:4.13'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
